name: Build, Test & Deploy to Render

# When should this workflow run?
on:
  push:
    branches: [ main ]  # Run on pushes to main branch
  pull_request:
    branches: [ main ]  # Run on PRs to main branch
  workflow_dispatch:  # Allow manual trigger from GitHub UI

# Define the jobs to run
jobs:
  # Job 1: Test the application
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        # Add your test commands here
        # pytest tests/ --cov=app
        echo "Tests would run here"
    
    - name: Check if model files exist
      run: |
        if [ ! -f regmodel.pkl ]; then
          echo "Error: regmodel.pkl not found!"
          exit 1
        fi
        if [ ! -f scaling.pkl ]; then
          echo "Error: scaling.pkl not found!"
          exit 1
        fi
        echo "‚úÖ All model files present"

  # Job 2: Build and test Docker image
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test  # Only run after tests pass
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: |
        docker build -t california-housing:${{ github.sha }} .
    
    - name: Test Docker image
      run: |
        docker run -d -p 10000:10000 --name test-container california-housing:${{ github.sha }}
        sleep 10
        # Check if container is running
        if [ "$(docker ps -q -f name=test-container)" ]; then
          echo "‚úÖ Docker container is running"
          docker logs test-container
          docker stop test-container
        else
          echo "‚ùå Docker container failed to start"
          docker logs test-container
          exit 1
        fi
    
    - name: Clean up
      if: always()
      run: |
        docker stop test-container || true
        docker rm test-container || true

  # Job 3: Notify on deployment
  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [test, docker-build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deployment Success
      run: |
        echo "üöÄ All checks passed! Render will automatically deploy."
        echo "‚úÖ Tests passed"
        echo "‚úÖ Docker build successful"
        echo "Check your Render dashboard for deployment status"